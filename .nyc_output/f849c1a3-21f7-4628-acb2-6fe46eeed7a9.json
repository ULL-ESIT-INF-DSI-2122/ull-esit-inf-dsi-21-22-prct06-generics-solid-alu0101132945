{"/home/usuario/workspace/Pract06/src/ejercicio-PE102/NumericPrintableCollection.ts":{"path":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/NumericPrintableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":30},"end":{"line":4,"column":62}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}},"4":{"start":{"line":18,"column":21},"end":{"line":18,"column":23}},"5":{"start":{"line":19,"column":8},"end":{"line":24,"column":11}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":26}},"7":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"8":{"start":{"line":22,"column":16},"end":{"line":22,"column":30}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":22}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":21},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":12},"end":{"line":26,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":29},"end":{"line":19,"column":30}},"loc":{"start":{"line":19,"column":36},"end":{"line":24,"column":9}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":3,"9":1,"10":1},"f":{"0":1,"1":1,"2":4},"b":{"0":[3,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/NumericPrintableCollection.ts","sources":["/home/usuario/workspace/Pract06/src/ejercicio-PE102/NumericPrintableCollection.ts"],"names":[],"mappings":";;;AAAA,+DAA4D;AAE5D,MAAa,0BAA2B,SAAQ,yCAAmB;IAE/D;;;OAGG;IACH,YAAY,GAAY;QACpB,KAAK,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED;;;OAGG;IACH,KAAK;QACD,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACvB,MAAM,IAAI,GAAG,CAAA;YACb,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,EAAC;gBAClD,MAAM,IAAI,GAAG,CAAA;aAChB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAA;IACjB,CAAC;CACJ;AAxBD,gEAwBC","sourcesContent":["import { PrintableCollection } from \"./PrintableCollection\";\n\nexport class NumericPrintableCollection extends PrintableCollection{\n\n    /**\n     * constructor de la clase numeric\n     * @param col coleccion de numeros que se va a guardar en el atributo collect\n     */\n    constructor(col:number[]){\n        super(col)    \n    }\n\n    /**\n     * Implementacion del metodo abstracto print en la clase numeric\n     * @returns devuelve una cadena con los numeros de la coleccion separados por comas\n     */\n    print():string{\n        let result = \"\"\n        this.collect.forEach(num => {\n            result += num\n            if(this.collect.indexOf(num) != this.collect.length-1){\n                result += ',' \n            }\n        });\n        return result\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70bf2ab8c7c06be7c989d1c49b9ebefcc636d634","contentHash":"dba7aefa7ca519be02e74334c53a0679725d500d62cc2d79693b19fcf1bd3ba1"},"/home/usuario/workspace/Pract06/src/ejercicio-PE102/PrintableCollection.ts":{"path":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/PrintableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":32}},"4":{"start":{"line":24,"column":8},"end":{"line":31,"column":11}},"5":{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},"6":{"start":{"line":26,"column":16},"end":{"line":26,"column":26}},"7":{"start":{"line":29,"column":16},"end":{"line":29,"column":68}},"8":{"start":{"line":38,"column":20},"end":{"line":38,"column":46}},"9":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"10":{"start":{"line":40,"column":12},"end":{"line":40,"column":64}},"11":{"start":{"line":42,"column":8},"end":{"line":42,"column":38}},"12":{"start":{"line":49,"column":8},"end":{"line":49,"column":35}},"13":{"start":{"line":52,"column":0},"end":{"line":52,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":21},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":18},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":18},"end":{"line":32,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":29},"end":{"line":24,"column":30}},"loc":{"start":{"line":24,"column":35},"end":{"line":31,"column":9}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":21},"end":{"line":43,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":23},"end":{"line":50,"column":5}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},{"start":{"line":25,"column":12},"end":{"line":30,"column":13}}],"line":25},"1":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39}},"s":{"0":1,"1":1,"2":2,"3":0,"4":1,"5":4,"6":1,"7":3,"8":0,"9":0,"10":0,"11":0,"12":2,"13":1},"f":{"0":2,"1":0,"2":1,"3":4,"4":0,"5":2},"b":{"0":[1,3],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/PrintableCollection.ts","sources":["/home/usuario/workspace/Pract06/src/ejercicio-PE102/PrintableCollection.ts"],"names":[],"mappings":";;;AAGA,MAAsB,mBAAmB;IAErC;;;OAGG;IACH,YAAY,GAAS;QACjB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAA;IACtB,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAQ;QACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAQ;QACZ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACtB,IAAG,IAAI,IAAI,EAAE,EAAC;gBAAC,OAAO,EAAE,CAAA;aAAC;iBACrB;gBAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;aAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,IAAQ;QACf,IAAI,KAAK,GAAU,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC7C,IAAG,KAAK,IAAI,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;SAAC;QACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAA;IAChC,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;IAC9B,CAAC;CAGJ;AAhDD,kDAgDC","sourcesContent":["import { Collectable } from \"./Collectable\";\nimport { Printable } from \"./Printable\";\n\nexport abstract class PrintableCollection implements Collectable,Printable{\n    collect:any[];\n    /**\n     * constructor de la clase abstracta PrintableCollection\n     * @param col coleccion que se va a usar para el atributo collect\n     */\n    constructor(col:any[]){\n        this.collect = col\n    }\n\n    /**\n     * este metodo añade al final de la coleccion un item\n     * @param item el item que se añade a la coleccion con el metodo\n     */\n    addItem(item:any){\n        this.collect.push(item)\n    }\n\n    /**\n     * este metodo busca un item en la coleccion y lo devuelve si existe\n     * @param item el item que se va a buscar en la coleccion\n     */\n    getItem(item:any):any{\n        this.collect.forEach(it => {\n            if(item == it){return it}\n            else{console.error(\"Ese objeto no esta en la coleccion\")}\n        });\n    }\n\n    /**\n     * este metodo borra un item de la coleccion\n     * @param item el item que se va a borrar\n     */\n    removeItem(item:any){\n        let index:number = this.collect.indexOf(item)\n        if(index == -1){console.error(\"Ese objeto no esta en la coleccion\")}\n        this.collect.splice(index,1)\n    }\n\n    /**\n     * este metodo devuelve el numero de objetos que hay en la coleccion\n     * @returns el numero de objetos que hay en la coleccion\n     */\n    getNumberofItems():number{\n        return this.collect.length\n    }\n    \n    abstract print():string;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6a5473f2b334bbb84a9eda99062087d06dda9acb","contentHash":"3b7d57f6c5f62f25177264f5e4145120eb7227b32e1f7d0e1dc1ebd3d7dc1b89"},"/home/usuario/workspace/Pract06/src/ejercicio-PE102/StringPrintableCollection.ts":{"path":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/StringPrintableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":30},"end":{"line":4,"column":62}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}},"4":{"start":{"line":18,"column":21},"end":{"line":18,"column":23}},"5":{"start":{"line":19,"column":8},"end":{"line":24,"column":11}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":26}},"7":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"8":{"start":{"line":22,"column":16},"end":{"line":22,"column":30}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":22}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":21},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":12},"end":{"line":26,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":29},"end":{"line":19,"column":30}},"loc":{"start":{"line":19,"column":36},"end":{"line":24,"column":9}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":2,"9":1,"10":1},"f":{"0":1,"1":1,"2":3},"b":{"0":[2,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/workspace/Pract06/src/ejercicio-PE102/StringPrintableCollection.ts","sources":["/home/usuario/workspace/Pract06/src/ejercicio-PE102/StringPrintableCollection.ts"],"names":[],"mappings":";;;AAAA,+DAA4D;AAE5D,MAAa,yBAA0B,SAAQ,yCAAmB;IAC9D;;;OAGG;IACH,YAAY,GAAY;QACpB,KAAK,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED;;;OAGG;IACH,KAAK;QACD,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACvB,MAAM,IAAI,GAAG,CAAA;YACb,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,EAAC;gBAClD,MAAM,IAAI,GAAG,CAAA;aAChB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAA;IACjB,CAAC;CACJ;AAvBD,8DAuBC","sourcesContent":["import { PrintableCollection } from \"./PrintableCollection\";\n\nexport class StringPrintableCollection extends PrintableCollection{\n    /**\n     * constructor de la clase string\n     * @param col la coleccion de string que vamos a guardar en el atributo collect\n     */\n    constructor(col:string[]){\n        super(col)\n    }\n\n    /**\n     * implementacion del metodo abstracto print para la clase string\n     * @returns una cadena con las cadenas de la coleccion separadas por comas\n     */\n    print():string{\n        let result = \"\"\n        this.collect.forEach(str => {\n            result += str\n            if(this.collect.indexOf(str) != this.collect.length-1){\n                result += ',' \n            }\n        });\n        return result\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6f980f9774756d2205cd026b6d0201e29c3ddf0","contentHash":"ca7cc1e165ff27b4b720af8baf11f08c10a73a9d75a31ce4067ca499de96ffe7"}}